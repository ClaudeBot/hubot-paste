# Description
#   Universal Paste API (Dpaste.com and Pastebin.com)
#
# Configuration:
#   PASTEBIN_API_KEY
#
# Commands:
#   hubot dpaste <content> - Creates a new paste with <content> on Dpaste.com
#   hubot pastebin <content> - Creates a new paste with <content> on Pastebin.com
#
# Author:
#   MrSaints

PASTEBIN_API_KEY = process.env.PASTEBIN_API_KEY

DPASTE_API_URL = "http://dpaste.com/api/v2/"
PASTEBIN_API_URL = "http://pastebin.com/api/api_post.php"

DEF_SERVER_ERROR = "We are unable to process your request at this time due to a server error. Please try again later."
DEF_CREDIT = "Generated by ClaudeBot's hubot-paste"

class IPaste
    constructor: (@robot, @msg = false) ->

    create: (err, link, callback = false) ->
        if err
            @msg.reply DEF_SERVER_ERROR if @msg
            return @robot.logger.error err
        if @msg
            @msg.reply link
        if callback
            callback link

class Dpaste extends IPaste
    create: (text, expire = 1, callback = false) ->
        data = "content=#{encodeURIComponent(text)}&expiry_days=#{expire}"
        data += "&poster=#{@robot.name}&title=#{encodeURIComponent(DEF_CREDIT)}"

        @robot.http(DPASTE_API_URL)
            .header("content-type", "application/x-www-form-urlencoded")
            .post(data) (err, res, body) =>
                @robot.logger.debug res.headers
                super err, res.headers.location, callback

class Pastebin extends IPaste
    create: (text, expire = "1D", callback = false) ->
        data = "api_dev_key=#{encodeURIComponent(PASTEBIN_API_KEY)}&api_option=paste"
        data += "&api_paste_code=#{encodeURIComponent(text)}&api_paste_expire_date=#{expire}"
        data += "&api_paste_name=#{encodeURIComponent(DEF_CREDIT)}"

        @robot.http(PASTEBIN_API_URL)
            .header("content-type", "application/x-www-form-urlencoded")
            .post(data) (err, res, body) =>
                @robot.logger.debug res.headers
                super err, body, callback

class PasteBot
    constructor: (@robot) ->
        @registerListeners()

    registerListeners: ->
        @robot.respond /dpaste (.+)/i, (msg) =>
            service = new Dpaste @robot, msg
            service.create msg.match[1]

        if PASTEBIN_API_KEY?
            @robot.respond /pastebin (.+)/i, (msg) =>
                service = new Pastebin @robot, msg
                service.create msg.match[1]
        else
            @robot.logger.warning "Missing PASTEBIN_API_KEY in environment. Pastebin services will not be available."

    dpaste: (text, expire = "1", callback) ->
        service = new Dpaste @robot
        try
            service.create text, expire, callback
        catch error
            return @robot.logger.error error

    pastebin: (text, expire = "1D", callback) ->
        service = new Pastebin @robot
        try
            service.create text, expire, callback
        catch error
            return @robot.logger.error error

module.exports = (robot) ->
    new PasteBot robot